#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer'

module Lani
  class Parser < Racc::Parser

module_eval(<<'...end lani.y/module_eval...', 'lani.y', 63)

def filename
  @filename
end

alias_method :parse_string, :scan_str

def pre_exe
  []
end

def on_error(t, val, vstack)
  raise ParseError, sprintf("\nparse error on value %s (%s) #{@filename}:#{@line}",
      val.inspect, token_to_str(t) || '?')
end

...end lani.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,    15,     4,     5,    17,     4,     5,    11,     6,
     7,    11,     6,     7,    11,     6,     7,     4,     5,    18,
     4,     5,    24,     4,     5,    11,     6,     7,    11,     6,
     7,    11,     6,     7,     4,     5,   nil,     4,     5,    22,
    23,   nil,    11,     6,     7,    11,     6,     7,    20,    21,
    22,    23,   nil,    27,    20,    21,    22,    23,    20,    21,
    22,    23,    20,    21,    22,    23,    22,    23 ]

racc_action_check = [
     0,     0,     1,    11,    11,     3,    16,    16,     0,     0,
     0,    11,    11,    11,    16,    16,    16,    18,    18,     8,
    20,    20,    15,    21,    21,    18,    18,    18,    20,    20,
    20,    21,    21,    21,    22,    22,   nil,    23,    23,    28,
    28,   nil,    22,    22,    22,    23,    23,    23,    19,    19,
    19,    19,   nil,    19,    14,    14,    14,    14,    25,    25,
    25,    25,    26,    26,    26,    26,    29,    29 ]

racc_action_pointer = [
    -2,     2,   nil,    -3,   nil,   nil,   nil,   nil,     6,   nil,
   nil,     1,   nil,   nil,    50,    22,     4,   nil,    15,    44,
    18,    21,    32,    35,   nil,    54,    58,   nil,    33,    60,
   nil,   nil ]

racc_action_default = [
    -2,   -22,    -1,    -3,    -4,    -5,    -6,    -7,   -13,    -9,
   -10,   -22,   -12,   -14,   -19,   -22,   -22,   -21,   -22,   -22,
   -22,   -22,   -22,   -22,    32,   -20,    -8,   -11,   -15,   -16,
   -17,   -18 ]

racc_goto_table = [
    14,     1,     2,     3,    16,   nil,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,    25,   nil,    26,   nil,
    28,    29,    30,    31 ]

racc_goto_check = [
     8,     1,     2,     3,    10,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,     8,   nil,     8,   nil,
     8,     8,     8,     8 ]

racc_goto_pointer = [
   nil,     1,     2,     3,   nil,   nil,   nil,   nil,     0,   nil,
     1 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     9,    12,     8,    13,   nil,    10,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 15, :_reduce_none,
  0, 16, :_reduce_2,
  1, 16, :_reduce_3,
  1, 18, :_reduce_4,
  1, 18, :_reduce_5,
  1, 19, :_reduce_6,
  1, 20, :_reduce_7,
  3, 21, :_reduce_8,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  3, 22, :_reduce_11,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  3, 23, :_reduce_15,
  3, 23, :_reduce_16,
  3, 23, :_reduce_17,
  3, 23, :_reduce_18,
  1, 17, :_reduce_19,
  3, 17, :_reduce_20,
  1, 24, :_reduce_none ]

racc_reduce_n = 22

racc_shift_n = 32

racc_token_table = {
  false => 0,
  :error => 1,
  :INTEGER => 2,
  :FLOAT => 3,
  :ADD => 4,
  :SUBTRACT => 5,
  :MULTIPLY => 6,
  :DIVIDE => 7,
  :NEWLINE => 8,
  :RPAREN => 9,
  :LPAREN => 10,
  :STRING => 11,
  :VARIABLE => 12,
  :ASSIGN => 13 }

racc_nt_base = 14

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INTEGER",
  "FLOAT",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "NEWLINE",
  "RPAREN",
  "LPAREN",
  "STRING",
  "VARIABLE",
  "ASSIGN",
  "$start",
  "root",
  "program",
  "expressions",
  "number",
  "string",
  "variable",
  "assignment",
  "expression",
  "binary_operation",
  "terminator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'lani.y', 24)
  def _reduce_2(val, _values)
     AST::Program.new( filename, lineno, [])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 25)
  def _reduce_3(val, _values)
     AST::Program.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 27)
  def _reduce_4(val, _values)
     AST::IntegerNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 28)
  def _reduce_5(val, _values)
     AST::FloatNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 30)
  def _reduce_6(val, _values)
     AST::StringNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 32)
  def _reduce_7(val, _values)
     AST::VariableNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 35)
  def _reduce_8(val, _values)
    AST::AssignmentNode.new( filename, lineno, val[0], val[2]) 
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'lani.y', 39)
  def _reduce_11(val, _values)
     val[1] 
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'lani.y', 44)
  def _reduce_15(val, _values)
    AST::AddNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 45)
  def _reduce_16(val, _values)
    AST::SubtractNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 46)
  def _reduce_17(val, _values)
    AST::MultiplyNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 47)
  def _reduce_18(val, _values)
    AST::DivideNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 49)
  def _reduce_19(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 50)
  def _reduce_20(val, _values)
     val[0] << val[2] 
  end
.,.,

# reduce 21 omitted

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module Lani


