#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer'

module Lani
  class Parser < Racc::Parser

module_eval(<<'...end lani.y/module_eval...', 'lani.y', 83)

def filename
  @filename
end

alias_method :parse_string, :scan_str

def pre_exe
  []
end

def on_error(t, val, vstack)
  raise ParseError, sprintf("\nparse error on value %s (%s) #{@filename}:#{@line}",
      val.inspect, token_to_str(t) || '?')
end

...end lani.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,    28,    29,    30,    31,    21,    37,    15,     6,
     7,    23,     9,    10,    11,    12,    25,     4,     5,    30,
    31,    28,    29,    30,    31,    15,     6,     7,    24,     9,
    10,    11,    12,     4,     5,    35,    36,    28,    29,    30,
    31,    15,     6,     7,    32,     9,    10,    11,    12,     4,
     5,    43,    28,    29,    30,    31,   nil,    15,     6,     7,
   nil,     9,    10,    11,    12,     4,     5,    28,    29,    30,
    31,    30,    31,    15,     6,     7,   nil,     9,    10,    11,
    12,     4,     5,    28,    29,    30,    31,   nil,   nil,    15,
     6,     7,   nil,     9,    10,    11,    12,     4,     5,   nil,
   nil,   nil,   nil,   nil,   nil,    15,     6,     7,   nil,     9,
    10,    11,    12,     4,     5,   nil,   nil,   nil,   nil,   nil,
   nil,    15,     6,     7,   nil,     9,    10,    11,    12,     4,
     5,   nil,   nil,   nil,   nil,   nil,   nil,    15,     6,     7,
   nil,     9,    10,    11,    12,     4,     5,   nil,   nil,   nil,
   nil,   nil,   nil,    15,     6,     7,   nil,     9,    10,    11,
    12 ]

racc_action_check = [
    12,    12,    27,    27,    27,    27,     1,    27,    12,    12,
    12,     3,    12,    12,    12,    12,    12,     0,     0,    38,
    38,    26,    26,    26,    26,     0,     0,     0,     8,     0,
     0,     0,     0,    15,    15,    26,    26,    42,    42,    42,
    42,    15,    15,    15,    21,    15,    15,    15,    15,    22,
    22,    42,    20,    20,    20,    20,   nil,    22,    22,    22,
   nil,    22,    22,    22,    22,    24,    24,    33,    33,    33,
    33,    39,    39,    24,    24,    24,   nil,    24,    24,    24,
    24,    28,    28,    34,    34,    34,    34,   nil,   nil,    28,
    28,    28,   nil,    28,    28,    28,    28,    29,    29,   nil,
   nil,   nil,   nil,   nil,   nil,    29,    29,    29,   nil,    29,
    29,    29,    29,    30,    30,   nil,   nil,   nil,   nil,   nil,
   nil,    30,    30,    30,   nil,    30,    30,    30,    30,    31,
    31,   nil,   nil,   nil,   nil,   nil,   nil,    31,    31,    31,
   nil,    31,    31,    31,    31,    36,    36,   nil,   nil,   nil,
   nil,   nil,   nil,    36,    36,    36,   nil,    36,    36,    36,
    36 ]

racc_action_pointer = [
    15,     6,   nil,     3,   nil,   nil,   nil,   nil,    15,   nil,
   nil,   nil,    -2,   nil,   nil,    31,   nil,   nil,   nil,   nil,
    48,    44,    47,   nil,    63,   nil,    17,    -2,    79,    95,
   111,   127,   nil,    63,    79,   nil,   143,   nil,    13,    65,
   nil,   nil,    33,   nil ]

racc_action_default = [
    -2,   -30,    -1,    -3,    -4,    -5,    -6,    -7,   -19,    -9,
   -10,   -11,   -30,   -15,   -16,   -30,   -18,   -20,   -21,   -22,
   -27,   -30,   -30,   -29,   -30,   -12,   -30,   -30,   -30,   -30,
   -30,   -30,    44,   -28,    -8,   -13,   -30,   -17,   -23,   -24,
   -25,   -26,   -30,   -14 ]

racc_goto_table = [
    20,     1,     2,     3,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,   nil,    27,   nil,   nil,   nil,   nil,
   nil,   nil,    33,   nil,    34,   nil,   nil,   nil,    38,    39,
    40,    41,   nil,   nil,   nil,   nil,    42 ]

racc_goto_check = [
     8,     1,     2,     3,    12,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     8,   nil,   nil,     8,   nil,   nil,   nil,   nil,
   nil,   nil,     8,   nil,     8,   nil,   nil,   nil,     8,     8,
     8,     8,   nil,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,     1,     2,     3,   nil,   nil,   nil,   nil,     0,   nil,
   nil,   nil,     1 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    13,    16,     8,    17,   nil,    18,
    19,    14,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 21, :_reduce_none,
  0, 22, :_reduce_2,
  1, 22, :_reduce_3,
  1, 24, :_reduce_4,
  1, 24, :_reduce_5,
  1, 25, :_reduce_6,
  1, 26, :_reduce_7,
  3, 27, :_reduce_8,
  1, 29, :_reduce_9,
  1, 29, :_reduce_10,
  1, 29, :_reduce_11,
  2, 30, :_reduce_12,
  3, 30, :_reduce_13,
  5, 30, :_reduce_14,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 28, :_reduce_17,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 31, :_reduce_23,
  3, 31, :_reduce_24,
  3, 31, :_reduce_25,
  3, 31, :_reduce_26,
  1, 23, :_reduce_27,
  3, 23, :_reduce_28,
  1, 32, :_reduce_none ]

racc_reduce_n = 30

racc_shift_n = 44

racc_token_table = {
  false => 0,
  :error => 1,
  :INTEGER => 2,
  :FLOAT => 3,
  :ADD => 4,
  :SUBTRACT => 5,
  :MULTIPLY => 6,
  :DIVIDE => 7,
  :NEWLINE => 8,
  :RPAREN => 9,
  :LPAREN => 10,
  :STRING => 11,
  :VARIABLE => 12,
  :ASSIGN => 13,
  :TRUE => 14,
  :FALSE => 15,
  :NIL => 16,
  :LSQBRA => 17,
  :RSQBRA => 18,
  :COMMA => 19 }

racc_nt_base = 20

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INTEGER",
  "FLOAT",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "NEWLINE",
  "RPAREN",
  "LPAREN",
  "STRING",
  "VARIABLE",
  "ASSIGN",
  "TRUE",
  "FALSE",
  "NIL",
  "LSQBRA",
  "RSQBRA",
  "COMMA",
  "$start",
  "root",
  "program",
  "expressions",
  "number",
  "string",
  "variable",
  "assignment",
  "expression",
  "boolean",
  "array",
  "binary_operation",
  "terminator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'lani.y', 31)
  def _reduce_2(val, _values)
     AST::Program.new( filename, lineno, [])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 32)
  def _reduce_3(val, _values)
     AST::Program.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 34)
  def _reduce_4(val, _values)
     AST::IntegerNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 35)
  def _reduce_5(val, _values)
     AST::FloatNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 37)
  def _reduce_6(val, _values)
     AST::StringNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 39)
  def _reduce_7(val, _values)
     AST::VariableNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 42)
  def _reduce_8(val, _values)
    AST::AssignmentNode.new( filename, lineno, val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 44)
  def _reduce_9(val, _values)
     AST::TrueBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 45)
  def _reduce_10(val, _values)
     AST::FalseBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 46)
  def _reduce_11(val, _values)
     AST::NilBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 48)
  def _reduce_12(val, _values)
     AST::ArrayNode.new( filename, lineno, [])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 49)
  def _reduce_13(val, _values)
     AST::ArrayNode.new( filename, lineno, val[1])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 50)
  def _reduce_14(val, _values)
     AST::ArrayNode.new( filename, lineno, val[1], val[3])
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'lani.y', 56)
  def _reduce_17(val, _values)
     val[1] 
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'lani.y', 64)
  def _reduce_23(val, _values)
    AST::AddNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 65)
  def _reduce_24(val, _values)
    AST::SubtractNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 66)
  def _reduce_25(val, _values)
    AST::MultiplyNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 67)
  def _reduce_26(val, _values)
    AST::DivideNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 69)
  def _reduce_27(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 70)
  def _reduce_28(val, _values)
     val[0] << val[2] 
  end
.,.,

# reduce 29 omitted

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module Lani


