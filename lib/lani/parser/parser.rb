#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer'

module Lani
  class Parser < Racc::Parser

module_eval(<<'...end lani.y/module_eval...', 'lani.y', 81)

def filename
  @filename
end

alias_method :parse_string, :scan_str

def pre_exe
  []
end

def on_error(t, val, vstack)
  raise ParseError, sprintf("\nparse error on value %s (%s) #{@filename}:#{@line}",
      val.inspect, token_to_str(t) || '?')
end

...end lani.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,    29,    30,    31,    32,    21,    38,    14,     6,
     7,    23,     8,     9,    10,    11,    25,     4,     5,    29,
    30,    31,    32,    36,    37,    14,     6,     7,    24,     8,
     9,    10,    11,     4,     5,    29,    30,    31,    32,    31,
    32,    14,     6,     7,    33,     8,     9,    10,    11,     4,
     5,    29,    30,    31,    32,    31,    32,    14,     6,     7,
   nil,     8,     9,    10,    11,     4,     5,    29,    30,    31,
    32,   nil,   nil,    14,     6,     7,   nil,     8,     9,    10,
    11,     4,     5,    29,    30,    31,    32,   nil,   nil,    14,
     6,     7,   nil,     8,     9,    10,    11,     4,     5,   nil,
   nil,   nil,   nil,   nil,   nil,    14,     6,     7,   nil,     8,
     9,    10,    11,     4,     5,   nil,   nil,   nil,   nil,   nil,
   nil,    14,     6,     7,   nil,     8,     9,    10,    11,     4,
     5,   nil,   nil,   nil,   nil,   nil,   nil,    14,     6,     7,
   nil,     8,     9,    10,    11,     4,     5,   nil,   nil,   nil,
   nil,   nil,   nil,    14,     6,     7,   nil,     8,     9,    10,
    11 ]

racc_action_check = [
    11,    11,    28,    28,    28,    28,     1,    28,    11,    11,
    11,     3,    11,    11,    11,    11,    11,     0,     0,    20,
    20,    20,    20,    26,    26,     0,     0,     0,     7,     0,
     0,     0,     0,    14,    14,    27,    27,    27,    27,    39,
    39,    14,    14,    14,    21,    14,    14,    14,    14,    22,
    22,    34,    34,    34,    34,    40,    40,    22,    22,    22,
   nil,    22,    22,    22,    22,    24,    24,    35,    35,    35,
    35,   nil,   nil,    24,    24,    24,   nil,    24,    24,    24,
    24,    29,    29,    43,    43,    43,    43,   nil,   nil,    29,
    29,    29,   nil,    29,    29,    29,    29,    30,    30,   nil,
   nil,   nil,   nil,   nil,   nil,    30,    30,    30,   nil,    30,
    30,    30,    30,    31,    31,   nil,   nil,   nil,   nil,   nil,
   nil,    31,    31,    31,   nil,    31,    31,    31,    31,    32,
    32,   nil,   nil,   nil,   nil,   nil,   nil,    32,    32,    32,
   nil,    32,    32,    32,    32,    37,    37,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    37,    37,   nil,    37,    37,    37,
    37 ]

racc_action_pointer = [
    15,     6,   nil,     3,   nil,   nil,   nil,    15,   nil,   nil,
   nil,    -2,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,
    15,    44,    47,   nil,    63,   nil,     5,    31,    -2,    79,
    95,   111,   127,   nil,    47,    63,   nil,   143,   nil,    33,
    49,   nil,   nil,    79 ]

racc_action_default = [
    -2,   -31,    -1,    -3,    -4,    -5,    -6,    -7,    -9,   -10,
   -11,   -31,   -16,   -17,   -31,   -19,   -20,   -21,   -22,   -23,
   -28,   -31,   -31,   -30,   -31,   -12,   -31,   -14,   -31,   -31,
   -31,   -31,   -31,    44,   -29,    -8,   -13,   -31,   -18,   -24,
   -25,   -26,   -27,   -15 ]

racc_goto_table = [
    20,     1,     2,     3,    26,    22,   nil,   nil,   nil,   nil,
   nil,    27,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    34,   nil,    35,   nil,   nil,   nil,   nil,    39,
    40,    41,    42,   nil,   nil,   nil,   nil,    43 ]

racc_goto_check = [
     8,     1,     2,     3,    11,    13,   nil,   nil,   nil,   nil,
   nil,     8,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     8,   nil,     8,   nil,   nil,   nil,   nil,     8,
     8,     8,     8,   nil,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,     1,     2,     3,   nil,   nil,   nil,   nil,     0,   nil,
   nil,    -7,   nil,     2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    12,    15,    16,    17,   nil,    18,
    19,   nil,    13,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 21, :_reduce_none,
  0, 22, :_reduce_2,
  1, 22, :_reduce_3,
  1, 24, :_reduce_4,
  1, 24, :_reduce_5,
  1, 25, :_reduce_6,
  1, 26, :_reduce_7,
  3, 27, :_reduce_8,
  1, 29, :_reduce_9,
  1, 29, :_reduce_10,
  1, 29, :_reduce_11,
  2, 30, :_reduce_12,
  3, 30, :_reduce_13,
  1, 31, :_reduce_14,
  3, 31, :_reduce_15,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 28, :_reduce_18,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 32, :_reduce_24,
  3, 32, :_reduce_25,
  3, 32, :_reduce_26,
  3, 32, :_reduce_27,
  1, 23, :_reduce_28,
  3, 23, :_reduce_29,
  1, 33, :_reduce_none ]

racc_reduce_n = 31

racc_shift_n = 44

racc_token_table = {
  false => 0,
  :error => 1,
  :INTEGER => 2,
  :FLOAT => 3,
  :ADD => 4,
  :SUBTRACT => 5,
  :MULTIPLY => 6,
  :DIVIDE => 7,
  :NEWLINE => 8,
  :RPAREN => 9,
  :LPAREN => 10,
  :STRING => 11,
  :IDENTIFIER => 12,
  :ASSIGN => 13,
  :TRUE => 14,
  :FALSE => 15,
  :NIL => 16,
  :LSQBRA => 17,
  :RSQBRA => 18,
  :COMMA => 19 }

racc_nt_base = 20

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INTEGER",
  "FLOAT",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "NEWLINE",
  "RPAREN",
  "LPAREN",
  "STRING",
  "IDENTIFIER",
  "ASSIGN",
  "TRUE",
  "FALSE",
  "NIL",
  "LSQBRA",
  "RSQBRA",
  "COMMA",
  "$start",
  "root",
  "program",
  "expressions",
  "number",
  "string",
  "variable_access",
  "variable_assignment",
  "expression",
  "boolean",
  "array",
  "elements",
  "binary_operation",
  "terminator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'lani.y', 31)
  def _reduce_2(val, _values)
     AST::Program.new( filename, lineno, [])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 32)
  def _reduce_3(val, _values)
     AST::Program.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 34)
  def _reduce_4(val, _values)
     AST::IntegerNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 35)
  def _reduce_5(val, _values)
     AST::FloatNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 37)
  def _reduce_6(val, _values)
     AST::StringNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 39)
  def _reduce_7(val, _values)
     AST::VariableAccessNode.new( filename, lineno, val[0])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 41)
  def _reduce_8(val, _values)
    AST::VariableAssignmentNode.new( filename, lineno, val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 43)
  def _reduce_9(val, _values)
     AST::TrueBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 44)
  def _reduce_10(val, _values)
     AST::FalseBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 45)
  def _reduce_11(val, _values)
     AST::NilBooleanNode.new( filename, lineno)
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 47)
  def _reduce_12(val, _values)
     AST::ArrayNode.new( filename, lineno, [])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 48)
  def _reduce_13(val, _values)
     AST::ArrayNode.new( filename, lineno, val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 50)
  def _reduce_14(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 51)
  def _reduce_15(val, _values)
     val[0] << val[2] 
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'lani.y', 55)
  def _reduce_18(val, _values)
     val[1] 
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'lani.y', 63)
  def _reduce_24(val, _values)
    AST::AddNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 64)
  def _reduce_25(val, _values)
    AST::SubtractNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 65)
  def _reduce_26(val, _values)
    AST::MultiplyNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 66)
  def _reduce_27(val, _values)
    AST::DivideNode.new( filename, lineno, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 68)
  def _reduce_28(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'lani.y', 69)
  def _reduce_29(val, _values)
     val[0] << val[2] 
  end
.,.,

# reduce 30 omitted

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module Lani


