#!/usr/bin/env rbx

file = __FILE__ # => bin/lani  
file = File.readlink(file) while File.symlink? file
$LOAD_PATH.unshift(File.expand_path('../../lib', file))

require 'lani'

disassemble = false

options = Rubinius::Options.new "Usage: #$0 [options] [program]", 20

options.on "-h", "--help", "Display this help" do 
	puts options
	exit 0
end


options.on "-v", "--version", "Show version" do 
	puts "Lani #{Lani::VERSION}"
	exit 0
end

options.on "-B", "--print-bytecode", "Print bytecode" do 
  disassemble = true
end

options.on "-e", "CODE", "Execute code" do |code|
  if disassemble
    puts Lani::Compiler.compile_string(code).decode
  else
    Lani::Compiler.eval(code)
  end
  exit 0
end

options.parse(ARGV)

require 'readline'
loop do
	code =Readline.readline "ln> "
	exit 0 unless code and code != "exit"
	puts "=> %p" % Lani::Compiler.eval(code, '(repl)', Object.send(:binding))
end



